version: '2.3'

services:
  base-app:
    build:
      context: .
      target: development
    working_dir: /boilerplate
    environment:
      - DOTENV_PATH=.env.example
    volumes:
      - ./:/boilerplate
      - /boilerplate/node_modules

  app:
    extends: base-app
    depends_on:
      database:
        condition: service_healthy
    environment:
      - NODE_ENV=development
    expose:
      - 5678
    ports:
      - "5678:5678"
    command: npm run start

  app-lint:
    extends: base-app
    command: npm run lint

  app-test:
    extends: base-app
    depends_on:
      database:
        condition: service_healthy
    environment:
      - NODE_ENV=test
    command: npm run test

  app-test-integration:
    extends: base-app
    depends_on:
      database:
        condition: service_healthy
    environment:
      - NODE_ENV=test
    command: npm run test:integration

  app-test-e2e:
    extends: base-app
    depends_on:
      database:
        condition: service_healthy
    environment:
      - NODE_ENV=test
    command: npm run test:e2e

  app-test-unit:
    extends: base-app
    depends_on:
      database:
        condition: service_healthy
    environment:
      - NODE_ENV=test
    command: npm run test:unit

  database:
    image: postgres:10.1-alpine
    environment:
      - POSTGRES_PASSWORD=Boilerplate123$$
    ports:
      - "5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
